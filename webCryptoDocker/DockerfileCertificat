# dockerfile multistage
# stage 1

# FROM maven:3.5.4-jdk-8-alpine AS build

# WORKDIR /myapp

# COPY pom.xml .
# ADD settings.xml /tmp
# RUN mvn -s /tmp/settings.xml -B -e -C -T 1C org.apache.maven.plugins:maven-dependency-plugin:3.1.1:go-offline
# COPY src ./src
# RUN mvn -s /tmp/settings.xml -B -e -C -T 1C package

# stage 2

FROM ubuntu:18.04

# RUN apt-get update && apt-get -y install openjdk-8-jdk && rm -rf /var/lib/apt/lists/*

# ENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk-amd64
# ENV PATH $JAVA_HOME/bin:$PATH

# RUN mkdir -p /usr/local/monCoffre/account
# RUN mkdir -p /usr/local/monCoffre/certificats
# RUN mkdir -p /usr/lib/jvm/java-1.8.0-openjdk-amd64/lib/security/cacerts/keystore/
# RUN mkdir -p /usr/lib/jvm/java-1.8.0-openjdk-amd64/lib/security/cacerts/truststore/

#########################################################################################

RUN apt-get update && apt-get -y install openssl && rm -rf /var/lib/apt/lists/*
WORKDIR /usr/local/certif/
RUN echo "\n\n\ntest\n\n\n\n" > creation.txt && openssl req -x509 -nodes -days 1 -newkey rsa:2048 -keyout ./cert.key -out ./cert.crt < creation.txt

#########################################################################################

# COPY --from=build /myapp/target/*-withdependencies.jar /App/certif.jar
# CMD ["java", "-jar", "/App/certif.jar"]
